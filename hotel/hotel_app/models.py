from django.db import models
from django.contrib.auth.models import AbstractUser
from phonenumber_field.modelfields import PhoneNumberField
from django.core.validators import MinValueValidator, MaxValueValidator


#! üåç –ú–æ–¥–µ–ª—å —Å—Ç—Ä–∞–Ω—ã
class Country(models.Model):
    country_name = models.CharField(max_length=32, unique=True)  #! –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
    country_image = models.ImageField(
        upload_to="country_images/"
    )  #! –§–ª–∞–≥ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã

    def __str__(self):
        return self.country_name


#! üë§ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserProfile(AbstractUser):
    ROLE_CHOICES = (
        ("simpleUser", "–û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"),
        ("ownerUser", "–í–ª–∞–¥–µ–ª–µ—Ü –æ—Ç–µ–ª—è"),
    )
    country = models.ForeignKey(
        Country, on_delete=models.CASCADE
    )  #! –°—Ç—Ä–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_role = models.CharField(
        max_length=10, choices=ROLE_CHOICES, default="simpleUser"
    )  #! –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    phone_number = PhoneNumberField(region="RUS")  #! –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    age = models.PositiveSmallIntegerField(
        validators=[MinValueValidator(18), MaxValueValidator(100)]
    )  #! –í–æ–∑—Ä–∞—Å—Ç

    def __str__(self):
        return f"{self.username} ({self.first_name} {self.last_name})"


#! üèôÔ∏è –ú–æ–¥–µ–ª—å –≥–æ—Ä–æ–¥–∞
class City(models.Model):
    city_name = models.CharField(max_length=32, unique=True)  #! –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞

    def __str__(self):
        return self.city_name


#! üè® –ú–æ–¥–µ–ª—å –æ—Ç–µ–ª—è
class Hotel(models.Model):
    hotel_name = models.CharField(max_length=32)  #! –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–µ–ª—è
    owner = models.ForeignKey(UserProfile, on_delete=models.CASCADE)  #! –í–ª–∞–¥–µ–ª–µ—Ü –æ—Ç–µ–ª—è
    hotel_description = models.TextField()  #! –û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–µ–ª—è
    country = models.ForeignKey(
        Country, on_delete=models.CASCADE
    )  #! –°—Ç—Ä–∞–Ω–∞, –≥–¥–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –æ—Ç–µ–ª—å
    city = models.ForeignKey(City, on_delete=models.CASCADE)  #! –ì–æ—Ä–æ–¥
    address = models.CharField(max_length=64)  #! –ê–¥—Ä–µ—Å
    hotel_stars = models.PositiveSmallIntegerField(
        validators=[MinValueValidator(1), MaxValueValidator(5)]
    )  #! –ö–æ–ª-–≤–æ –∑–≤—ë–∑–¥
    hotel_video = models.FileField(
        upload_to="videos/", null=True, blank=True
    )  #! –í–∏–¥–µ–æ-–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –æ—Ç–µ–ª—è
    created_date = models.DateTimeField(auto_now_add=True)  #! –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è

    def __str__(self):
        return f"{self.hotel_name} ({self.city}, {self.country})"

    def avg_rating(self):
        """üìä –†–∞—Å—á—ë—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –æ—Ç–µ–ª—è"""
        ratings = self.reviews.all()
        if ratings.exists():
            return round(sum([r.stars for r in ratings]) / ratings.count(), 2)
        return 0

    def count_people(self):
        """üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ—Å—Ç–∞–≤–∏–≤—à–∏—Ö –æ—Ç–∑—ã–≤—ã"""
        return self.reviews.count()


#! üñºÔ∏è –ú–æ–¥–µ–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Ç–µ–ª—è
class HotelImage(models.Model):
    hotel = models.ForeignKey(
        Hotel, on_delete=models.CASCADE, related_name="hotel_images"
    )  #! –°–≤—è–∑—å —Å –æ—Ç–µ–ª–µ–º
    hotel_image = models.ImageField(
        upload_to="hotel_images/", null=True, blank=True
    )  #! –§–æ—Ç–æ –æ—Ç–µ–ª—è


#! üö™ –ú–æ–¥–µ–ª—å –∫–æ–º–Ω–∞—Ç—ã
class Room(models.Model):
    room_number = models.PositiveSmallIntegerField()  #! –ù–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã
    hotel = models.ForeignKey(
        Hotel, on_delete=models.CASCADE, related_name="rooms"
    )  #! –û—Ç–µ–ª—å, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫–æ–º–Ω–∞—Ç–∞

    TYPE_ROOM = (
        ("–ª—é–∫—Å", "–õ—é–∫—Å"),
        ("—Å–µ–º–µ–π–Ω—ã–π", "–°–µ–º–µ–π–Ω—ã–π"),
        ("–æ–¥–Ω–æ–º–µ—Å—Ç–Ω—ã–π", "–û–¥–Ω–æ–º–µ—Å—Ç–Ω—ã–π"),
        ("–¥–≤—É—Ö–º–µ—Å—Ç–Ω—ã–π", "–î–≤—É—Ö–º–µ—Å—Ç–Ω—ã–π"),
    )
    room_type = models.CharField(max_length=12, choices=TYPE_ROOM)  #! –¢–∏–ø –∫–æ–º–Ω–∞—Ç—ã

    STATUS_CHOICES = (
        ("–¥–æ—Å—Ç—É–ø–µ–Ω", "–î–æ—Å—Ç—É–ø–µ–Ω"),
        ("–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω", "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω"),
    )
    room_status = models.CharField(
        max_length=12, choices=STATUS_CHOICES
    )  #! –°—Ç–∞—Ç—É—Å –∫–æ–º–Ω–∞—Ç—ã

    room_price = models.PositiveSmallIntegerField()  #! –¶–µ–Ω–∞ –∑–∞ –Ω–æ—á—å
    all_included = models.BooleanField(
        default=False
    )  #! –í–∫–ª—é—á–µ–Ω–æ –ª–∏ –≤—Å—ë (–ø–∏—Ç–∞–Ω–∏–µ, —É–¥–æ–±—Å—Ç–≤–∞)
    room_description = models.TextField()  #! –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã

    def __str__(self):
        return f"–ö–æ–º–Ω–∞—Ç–∞ {self.room_number} –≤ {self.hotel.hotel_name}"


#! üñºÔ∏è –ú–æ–¥–µ–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–æ–º–Ω–∞—Ç—ã
class RoomImage(models.Model):
    room = models.ForeignKey(
        Room, on_delete=models.CASCADE, related_name="room_images"
    )  #! –°–≤—è–∑—å —Å –∫–æ–º–Ω–∞—Ç–æ–π
    room_image = models.ImageField(
        upload_to="room_images/", null=True, blank=True
    )  #! –§–æ—Ç–æ –∫–æ–º–Ω–∞—Ç—ã


#! üìù –ú–æ–¥–µ–ª—å –æ—Ç–∑—ã–≤–∞
class Review(models.Model):
    user = models.ForeignKey(UserProfile, on_delete=models.CASCADE)  #! –ê–≤—Ç–æ—Ä –æ—Ç–∑—ã–≤–∞
    hotel = models.ForeignKey(
        Hotel, on_delete=models.CASCADE, related_name="reviews"
    )  #! –û—Ç–µ–ª—å, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –æ—Ç–∑—ã–≤
    text = models.TextField()  #! –¢–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
    stars = models.PositiveSmallIntegerField(
        choices=[(i, str(i)) for i in range(1, 11)], null=True, blank=True
    )  #! –û—Ü–µ–Ω–∫–∞ –æ—Ç 1 –¥–æ 10

    def __str__(self):
        return f"{self.user.username} ‚Üí {self.hotel.hotel_name}: {self.stars}‚òÖ"


#! üìÖ –ú–æ–¥–µ–ª—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
class Booking(models.Model):
    hotel = models.ForeignKey(Hotel, on_delete=models.CASCADE)  #! –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–µ–ª—å
    room = models.ForeignKey(Room, on_delete=models.CASCADE)  #! –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞
    user = models.ForeignKey(
        UserProfile, on_delete=models.CASCADE
    )  #! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–¥–µ–ª–∞–≤—à–∏–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    check_in = models.DateTimeField()  #! –î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞
    check_out = models.DateTimeField()  #! –î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞
    total_price = models.PositiveSmallIntegerField(default=0)  #! –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å

    STATUS_CHOICES = (
        ("–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω", "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω"),
        ("–æ—Ç–º–µ–Ω–µ–Ω", "–û—Ç–º–µ–Ω—ë–Ω"),
    )
    status = models.CharField(
        max_length=12, choices=STATUS_CHOICES
    )  #! –°—Ç–∞—Ç—É—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

    def __str__(self):
        return f"{self.user.username} ‚Üí {self.hotel.hotel_name} / –ö–æ–º–Ω–∞—Ç–∞ {self.room.room_number} ({self.status})"
